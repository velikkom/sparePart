import * as XLSX from "xlsx";
import { saveAs } from "file-saver";
import Swal from "sweetalert2";

export const exportFullFormToExcel = (collections, selectedIds) => {
  const generateHeaders = () => [
    "Sƒ±ra No",
    "Tahsilat Makbuz No",
    "Micro Kayƒ±t No",
    "√únvanƒ±",
    "Tarih",
    "Nakit Tutarƒ±",
    "Senet Vade Tarihi",
    "Senet Tutarƒ±",
    "√áek Banka Adƒ±",
    "√áek Vade",
    "√áek Tutarƒ±",
    "Mailorder Karland Tutar",
    "Mailorder Otokoc Tutar",
    "Havale Banka",
    "Havale Tutarƒ±",
    "POS YKB",
    "POS TEB",
  ];
  const generateRows = (collections) => {
    return collections.map((col, index) => {
      // üîç Buraya ekle
      console.log("üëâ Excel'e Aktarƒ±lan Senet:", col.paymentMethod, col.noteAmount);
  
      return {
        "Sƒ±ra No": index + 1,
        "Tahsilat Makbuz No": col.receiptNumber || "-",
        "Micro Kayƒ±t No": "",
        "√únvanƒ±": col.firmName,
        "Tarih": col.collectionDate || "",
  
        "Nakit Tutarƒ±": col.paymentMethod === "CASH" ? col.amount : "",
        "Senet Vade Tarihi": col.paymentMethod === "NOTE" ? col.noteDueDate || "" : "",
        "Senet Tutarƒ±": col.paymentMethod === "NOTE" ? col.noteAmount || "" : "",
  
        "√áek Banka Adƒ±": col.paymentMethod === "CHECK" ? col.checkBankName || "" : "",
        "√áek Vade": col.paymentMethod === "CHECK" ? col.checkDueDate || "" : "",
        "√áek Tutarƒ±": col.paymentMethod === "CHECK" ? col.amount || "" : "",
  
        "Mailorder Karland Tutar": col.paymentMethod === "CREDIT_CARD" ? col.amount || "" : "",
        "Mailorder Otokoc Tutar": "",
  
        "Havale Banka": "",
        "Havale Tutarƒ±": col.paymentMethod === "BANK_TRANSFER" ? col.amount || "" : "",
  
        "POS YKB": "",
        "POS TEB": ""
      };
    });
  };
  
  

  const selected = collections.filter((col) => selectedIds.includes(col.id));

  if (selected.length === 0) {
    Swal.fire(
      "Uyarƒ±",
      "L√ºtfen Excel'e aktarmak i√ßin en az bir tahsilat se√ßin!",
      "warning"
    );
    return;
  }

  const headers = generateHeaders();
  const rows = generateRows(selected);

  const worksheet = XLSX.utils.json_to_sheet(rows, { header: headers });
  const workbook = XLSX.utils.book_new();
  XLSX.utils.book_append_sheet(workbook, worksheet, "Tahsilat D√∂k√ºm√º");

  const buffer = XLSX.write(workbook, { bookType: "xlsx", type: "array" });
  const blob = new Blob([buffer], { type: "application/octet-stream" });
  saveAs(blob, "tahsilat-dokumu-form.xlsx");
};
